// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Department one-to-many with major
model Department {
  id        Int      @id @default(autoincrement())
  code      String   @db.VarChar(10)
  name      String   @db.VarChar(255)
  // e.g.: Ganesa, Jatinangor, Cirebon, Walini
  location  Location
  // department has many majors
  majors    Major[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("departments")
}

enum Location {
  GANESA
  JATINANGOR
  CIREBON
  WALINI
}

// Department one-to-many with major
model Major {
  id            Int        @id @default(autoincrement())
  // e.g.: IF, DK, TM, MR, FTI-G, FTTM-C
  code          String     @db.VarChar(7)
  // e.g.: Teknik Industri, Arsitektur
  name          String     @db.VarChar(255)
  nim_prefix    Int
  // major belongs to one department
  department    Department @relation(fields: [department_id], references: [id])
  department_id Int
  // major has many members
  members       Member[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@map("majors")
}

model Member {
  id Int @id @default(autoincrement())

  // NIM aktif (== tpb_nim jika masih tpb)
  nim             Int?      @unique
  tpb_nim         Int?      @unique
  name            String
  nickname        String
  // member belongs to one major
  major           Major     @relation(fields: [major_id], references: [id])
  major_id        Int
  // MALE / FEMALE
  gender          Gender
  birth_date      DateTime?
  year            Int
  line            String?   @db.VarChar(31)
  phone           String?   @db.VarChar(31)
  email           String?   @db.VarChar(255)
  current_address String?   @db.VarChar(1023)
  origin_province String?   @db.VarChar(255)
  origin_address  String?   @db.VarChar(1023)

  origin_school  String? @db.VarChar(255)
  current_church String? @db.VarChar(255)
  origin_church  String? @db.VarChar(255)

  // active/graduated/dropped_out
  status MemberStatus? @default(ACTIVE)
  notes  String?       @db.Text

  // Member has 1 parent
  parent    Parent @relation(fields: [parent_id], references: [id])
  parent_id Int

  // Member jadi 'AKTB' di 1 Discipleship
  discipleship    Discipleship? @relation(name: "AKTB", fields: [discipleship_id], references: [id])
  discipleship_id Int?

  // Member jadi 'PKTB' di 1 Discpleship
  fellowship    Discipleship? @relation(name: "PKTB", fields: [fellowship_id], references: [id])
  fellowship_id Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("members")
}

enum Gender {
  MALE
  FEMALE
}

enum MemberStatus {
  ACTIVE
  GRADUATED
  DROPPED_OUT
  ON_LEAVE
  TRANSFERRED
  DECEASED
}

model Parent {
  id Int @id @default(autoincrement())

  // A Parent may have many children (members)
  children  Member[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("parents")
}

model Discipleship {
  id          Int                @id @default(autoincrement())
  member_id   Member[]           @relation(name: "AKTB")
  // gimana kalo ini pake nama lengkap leader nya aja, jadi tipe nya string
  leader_id   Member?            @relation(name: "PKTB") // gimana kalau leader bukan dari PMK ITB?
  institution String?            @db.VarChar(255)
  start_date  DateTime?
  // pending/ok/need_attention
  status      DiscipleshipStatus @db.VarChar(31)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("discipleships")
}

enum DiscipleshipStatus {
  PENDING
  OK
  NEED_ATTENTION
}
