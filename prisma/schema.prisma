// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Department one-to-many with major
model Department {
  id        Int      @id @default(autoincrement())
  code      String   @db.VarChar(10)
  name      String   @db.VarChar(255)
  // e.g.: Ganesa, Jatinangor, Cirebon, Walini
  location  Location
  // department has many majors
  majors    Major[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("departments")
}

enum Location {
  GANESA
  JATINANGOR
  CIREBON
  WALINI
}

// Department one-to-many with major
model Major {
  id           Int        @id @default(autoincrement())
  // e.g.: IF, DK, TM, MR, FTI-G, FTTM-C
  code         String     @db.VarChar(7)
  // e.g.: Teknik Industri, Arsitektur
  name         String     @db.VarChar(255)
  nimPrefix    Int
  // major belongs to one department
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId Int
  // major has many members
  members      Member[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@map("majors")
}

model Member {
  id Int @id @default(autoincrement())

  // NIM aktif (== tpb_nim jika masih tpb)
  nim            Int?      @unique
  tpbNim         Int?      @unique
  name           String
  nickname       String
  // member belongs to one major
  major          Major     @relation(fields: [majorId], references: [id])
  majorId        Int
  // MALE / FEMALE
  gender         Gender
  birthDate      DateTime?
  year           Int
  line           String?   @db.VarChar(31)
  phone          String?   @db.VarChar(31)
  email          String?   @db.VarChar(255)
  currentAddress String?   @db.VarChar(1023)
  originProvince String?   @db.VarChar(255)
  originAddress  String?   @db.VarChar(1023)

  originSchool  String? @db.VarChar(255)
  currentChurch String? @db.VarChar(255)
  originChurch  String? @db.VarChar(255)

  // active/graduated/dropped_out
  status MemberStatus @default(ACTIVE)
  notes  String?      @db.Text

  // Member has 1 parent
  parent   Parent @relation(fields: [parentId], references: [id])
  parentId Int

  // Member jadi 'AKTB' di 1 Discipleship
  discipleship   Discipleship? @relation(fields: [discipleshipId], references: [id])
  discipleshipId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("members")
}

enum Gender {
  MALE
  FEMALE
}

enum MemberStatus {
  ACTIVE
  GRADUATED
  DROPPED_OUT
  ON_LEAVE
  TRANSFERRED
  DECEASED
}

model Parent {
  id Int @id @default(autoincrement())

  // A Parent may have many children (members)
  children  Member[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("parents")
}

model Discipleship {
  id          Int                @id @default(autoincrement())
  members     Member[]
  leader      Leader?            @relation(fields: [leaderId], references: [id])
  leaderId    Int?
  institution String?            @db.VarChar(255)
  startDate   DateTime?
  // pending/ok/need_attention
  status      DiscipleshipStatus

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("discipleships")
}

model Leader {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(255)
  discipleship Discipleship?
}

enum DiscipleshipStatus {
  PENDING
  OK
  NEED_ATTENTION
}
